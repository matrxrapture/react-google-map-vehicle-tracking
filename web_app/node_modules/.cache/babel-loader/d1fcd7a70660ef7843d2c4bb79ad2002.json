{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\n\nfunction useFetch(url) {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    setLoading('Loading.....');\n    setData(null);\n    setError(null);\n    const source = axios.CancelToken.source();\n    axios.get(url, {\n      cancelToken: source.token\n    }).then(res => {\n      setLoading(false);\n      res && res.data && setData(res.data);\n    }).catch(err => {\n      setLoading(false);\n      setError('An error occured. ', err);\n    });\n    return () => {\n      source.cancel();\n    };\n  }, [url]);\n  return {\n    data,\n    loading,\n    error\n  };\n}\n\n_s(useFetch, \"zzftc7KK+fKkf+FTc61ZRBaeV24=\");\n\nexport default useFetch;","map":{"version":3,"sources":["/home/elton/react-google-map-vehicle-tracking/src/hooks/useFetch.js"],"names":["axios","useState","useEffect","useFetch","url","data","setData","loading","setLoading","error","setError","source","CancelToken","get","cancelToken","token","then","res","catch","err","cancel"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAmC,OAAnC;;AAEA,SAASC,QAAT,CAAkBC,GAAlB,EAAuB;AAAA;;AACnB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,UAAU,CAAC,cAAD,CAAV;AACAF,IAAAA,OAAO,CAAC,IAAD,CAAP;AACAI,IAAAA,QAAQ,CAAC,IAAD,CAAR;AAEA,UAAMC,MAAM,GAAGX,KAAK,CAACY,WAAN,CAAkBD,MAAlB,EAAf;AACAX,IAAAA,KAAK,CAACa,GAAN,CAAUT,GAAV,EAAe;AAAEU,MAAAA,WAAW,EAAEH,MAAM,CAACI;AAAtB,KAAf,EACKC,IADL,CACUC,GAAG,IAAI;AACTT,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAS,MAAAA,GAAG,IAAIA,GAAG,CAACZ,IAAX,IAAmBC,OAAO,CAACW,GAAG,CAACZ,IAAL,CAA1B;AACH,KAJL,EAKKa,KALL,CAKWC,GAAG,IAAI;AACVX,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,QAAQ,CAAC,oBAAD,EAAuBS,GAAvB,CAAR;AACH,KARL;AASI,WAAO,MAAM;AACTR,MAAAA,MAAM,CAACS,MAAP;AACH,KAFD;AAGP,GAlBQ,EAkBN,CAAChB,GAAD,CAlBM,CAAT;AAmBA,SAAO;AAAEC,IAAAA,IAAF;AAAQE,IAAAA,OAAR;AAAiBE,IAAAA;AAAjB,GAAP;AACH;;GAzBQN,Q;;AA2BT,eAAeA,QAAf","sourcesContent":["import axios from 'axios';\nimport {useState, useEffect } from 'react'\n\nfunction useFetch(url) {\n    const [data, setData] = useState(null);\n    const [loading, setLoading] = useState(null);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        setLoading('Loading.....');\n        setData(null);\n        setError(null);\n\n        const source = axios.CancelToken.source();\n        axios.get(url, { cancelToken: source.token })\n            .then(res => {\n                setLoading(false);\n                res && res.data && setData(res.data);\n            })\n            .catch(err => {\n                setLoading(false);\n                setError('An error occured. ', err)\n            })\n            return () => {\n                source.cancel();\n            }\n    }, [url])\n    return { data, loading, error }\n}\n\nexport default useFetch;\n"]},"metadata":{},"sourceType":"module"}