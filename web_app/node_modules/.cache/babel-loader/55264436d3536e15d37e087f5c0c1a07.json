{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"color\", \"component\", \"fontSize\", \"htmlColor\", \"inheritViewBox\", \"titleAccess\", \"viewBox\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getSvgIconUtilityClass } from './svgIconClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    color,\n    fontSize,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', color !== 'inherit' && `color${capitalize(color)}`, `fontSize${capitalize(fontSize)}`]\n  };\n  return composeClasses(slots, getSvgIconUtilityClass, classes);\n};\n\nconst SvgIconRoot = styled('svg', {\n  name: 'MuiSvgIcon',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.color !== 'inherit' && styles[`color${capitalize(ownerState.color)}`], styles[`fontSize${capitalize(ownerState.fontSize)}`]];\n  }\n})(_ref => {\n  let {\n    theme,\n    ownerState\n  } = _ref;\n\n  var _theme$transitions, _theme$transitions$cr, _theme$transitions2, _theme$transitions2$d, _theme$typography, _theme$typography$pxT, _theme$typography2, _theme$typography2$px, _theme$typography3, _theme$typography3$px, _palette$ownerState$c, _palette, _palette$ownerState$c2, _palette2, _palette2$action, _palette3, _palette3$action;\n\n  return {\n    userSelect: 'none',\n    width: '1em',\n    height: '1em',\n    display: 'inline-block',\n    // the <svg> will define the property that has `currentColor`\n    // e.g. heroicons uses fill=\"none\" and stroke=\"currentColor\"\n    fill: ownerState.hasSvgAsChild ? undefined : 'currentColor',\n    flexShrink: 0,\n    transition: (_theme$transitions = theme.transitions) == null ? void 0 : (_theme$transitions$cr = _theme$transitions.create) == null ? void 0 : _theme$transitions$cr.call(_theme$transitions, 'fill', {\n      duration: (_theme$transitions2 = theme.transitions) == null ? void 0 : (_theme$transitions2$d = _theme$transitions2.duration) == null ? void 0 : _theme$transitions2$d.shorter\n    }),\n    fontSize: {\n      inherit: 'inherit',\n      small: ((_theme$typography = theme.typography) == null ? void 0 : (_theme$typography$pxT = _theme$typography.pxToRem) == null ? void 0 : _theme$typography$pxT.call(_theme$typography, 20)) || '1.25rem',\n      medium: ((_theme$typography2 = theme.typography) == null ? void 0 : (_theme$typography2$px = _theme$typography2.pxToRem) == null ? void 0 : _theme$typography2$px.call(_theme$typography2, 24)) || '1.5rem',\n      large: ((_theme$typography3 = theme.typography) == null ? void 0 : (_theme$typography3$px = _theme$typography3.pxToRem) == null ? void 0 : _theme$typography3$px.call(_theme$typography3, 35)) || '2.1875rem'\n    }[ownerState.fontSize],\n    // TODO v5 deprecate, v6 remove for sx\n    color: (_palette$ownerState$c = (_palette = (theme.vars || theme).palette) == null ? void 0 : (_palette$ownerState$c2 = _palette[ownerState.color]) == null ? void 0 : _palette$ownerState$c2.main) != null ? _palette$ownerState$c : {\n      action: (_palette2 = (theme.vars || theme).palette) == null ? void 0 : (_palette2$action = _palette2.action) == null ? void 0 : _palette2$action.active,\n      disabled: (_palette3 = (theme.vars || theme).palette) == null ? void 0 : (_palette3$action = _palette3.action) == null ? void 0 : _palette3$action.disabled,\n      inherit: undefined\n    }[ownerState.color]\n  };\n});\nconst SvgIcon = /*#__PURE__*/React.forwardRef(function SvgIcon(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSvgIcon'\n  });\n\n  const {\n    children,\n    className,\n    color = 'inherit',\n    component = 'svg',\n    fontSize = 'medium',\n    htmlColor,\n    inheritViewBox = false,\n    titleAccess,\n    viewBox = '0 0 24 24'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const hasSvgAsChild = /*#__PURE__*/React.isValidElement(children) && children.type === 'svg';\n\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    fontSize,\n    instanceFontSize: inProps.fontSize,\n    inheritViewBox,\n    viewBox,\n    hasSvgAsChild\n  });\n\n  const more = {};\n\n  if (!inheritViewBox) {\n    more.viewBox = viewBox;\n  }\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(SvgIconRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    focusable: \"false\",\n    color: htmlColor,\n    \"aria-hidden\": titleAccess ? undefined : true,\n    role: titleAccess ? 'img' : undefined,\n    ref: ref\n  }, more, other, hasSvgAsChild && children.props, {\n    ownerState: ownerState,\n    children: [hasSvgAsChild ? children.props.children : children, titleAccess ? /*#__PURE__*/_jsx(\"title\", {\n      children: titleAccess\n    }) : null]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? SvgIcon.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Node passed into the SVG element.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * You can use the `htmlColor` prop to apply a color attribute to the SVG element.\n   * @default 'inherit'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['inherit', 'action', 'disabled', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.\n   * @default 'medium'\n   */\n  fontSize: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['inherit', 'large', 'medium', 'small']), PropTypes.string]),\n\n  /**\n   * Applies a color attribute to the SVG element.\n   */\n  htmlColor: PropTypes.string,\n\n  /**\n   * If `true`, the root node will inherit the custom `component`'s viewBox and the `viewBox`\n   * prop will be ignored.\n   * Useful when you want to reference a custom `component` and have `SvgIcon` pass that\n   * `component`'s viewBox to the root node.\n   * @default false\n   */\n  inheritViewBox: PropTypes.bool,\n\n  /**\n   * The shape-rendering attribute. The behavior of the different options is described on the\n   * [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering).\n   * If you are having issues with blurry icons you should investigate this prop.\n   */\n  shapeRendering: PropTypes.string,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * Provides a human-readable title for the element that contains it.\n   * https://www.w3.org/TR/SVG-access/#Equivalent\n   */\n  titleAccess: PropTypes.string,\n\n  /**\n   * Allows you to redefine what the coordinates without units mean inside an SVG element.\n   * For example, if the SVG element is 500 (width) by 200 (height),\n   * and you pass viewBox=\"0 0 50 20\",\n   * this means that the coordinates inside the SVG will go from the top left corner (0,0)\n   * to bottom right (50,20) and each unit will be worth 10px.\n   * @default '0 0 24 24'\n   */\n  viewBox: PropTypes.string\n} : void 0;\nSvgIcon.muiName = 'SvgIcon';\nexport default SvgIcon;","map":{"version":3,"sources":["/home/elton/react-google-map-vehicle-tracking/node_modules/@mui/material/SvgIcon/SvgIcon.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","clsx","unstable_composeClasses","composeClasses","capitalize","useThemeProps","styled","getSvgIconUtilityClass","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","ownerState","color","fontSize","classes","slots","root","SvgIconRoot","name","slot","overridesResolver","props","styles","theme","_theme$transitions","_theme$transitions$cr","_theme$transitions2","_theme$transitions2$d","_theme$typography","_theme$typography$pxT","_theme$typography2","_theme$typography2$px","_theme$typography3","_theme$typography3$px","_palette$ownerState$c","_palette","_palette$ownerState$c2","_palette2","_palette2$action","_palette3","_palette3$action","userSelect","width","height","display","fill","hasSvgAsChild","undefined","flexShrink","transition","transitions","create","call","duration","shorter","inherit","small","typography","pxToRem","medium","large","vars","palette","main","action","active","disabled","SvgIcon","forwardRef","inProps","ref","children","className","component","htmlColor","inheritViewBox","titleAccess","viewBox","other","isValidElement","type","instanceFontSize","more","as","focusable","role","process","env","NODE_ENV","propTypes","node","object","string","oneOfType","oneOf","elementType","bool","shapeRendering","sx","arrayOf","func","muiName"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"color\", \"component\", \"fontSize\", \"htmlColor\", \"inheritViewBox\", \"titleAccess\", \"viewBox\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getSvgIconUtilityClass } from './svgIconClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    color,\n    fontSize,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', color !== 'inherit' && `color${capitalize(color)}`, `fontSize${capitalize(fontSize)}`]\n  };\n  return composeClasses(slots, getSvgIconUtilityClass, classes);\n};\nconst SvgIconRoot = styled('svg', {\n  name: 'MuiSvgIcon',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.color !== 'inherit' && styles[`color${capitalize(ownerState.color)}`], styles[`fontSize${capitalize(ownerState.fontSize)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  var _theme$transitions, _theme$transitions$cr, _theme$transitions2, _theme$transitions2$d, _theme$typography, _theme$typography$pxT, _theme$typography2, _theme$typography2$px, _theme$typography3, _theme$typography3$px, _palette$ownerState$c, _palette, _palette$ownerState$c2, _palette2, _palette2$action, _palette3, _palette3$action;\n  return {\n    userSelect: 'none',\n    width: '1em',\n    height: '1em',\n    display: 'inline-block',\n    // the <svg> will define the property that has `currentColor`\n    // e.g. heroicons uses fill=\"none\" and stroke=\"currentColor\"\n    fill: ownerState.hasSvgAsChild ? undefined : 'currentColor',\n    flexShrink: 0,\n    transition: (_theme$transitions = theme.transitions) == null ? void 0 : (_theme$transitions$cr = _theme$transitions.create) == null ? void 0 : _theme$transitions$cr.call(_theme$transitions, 'fill', {\n      duration: (_theme$transitions2 = theme.transitions) == null ? void 0 : (_theme$transitions2$d = _theme$transitions2.duration) == null ? void 0 : _theme$transitions2$d.shorter\n    }),\n    fontSize: {\n      inherit: 'inherit',\n      small: ((_theme$typography = theme.typography) == null ? void 0 : (_theme$typography$pxT = _theme$typography.pxToRem) == null ? void 0 : _theme$typography$pxT.call(_theme$typography, 20)) || '1.25rem',\n      medium: ((_theme$typography2 = theme.typography) == null ? void 0 : (_theme$typography2$px = _theme$typography2.pxToRem) == null ? void 0 : _theme$typography2$px.call(_theme$typography2, 24)) || '1.5rem',\n      large: ((_theme$typography3 = theme.typography) == null ? void 0 : (_theme$typography3$px = _theme$typography3.pxToRem) == null ? void 0 : _theme$typography3$px.call(_theme$typography3, 35)) || '2.1875rem'\n    }[ownerState.fontSize],\n    // TODO v5 deprecate, v6 remove for sx\n    color: (_palette$ownerState$c = (_palette = (theme.vars || theme).palette) == null ? void 0 : (_palette$ownerState$c2 = _palette[ownerState.color]) == null ? void 0 : _palette$ownerState$c2.main) != null ? _palette$ownerState$c : {\n      action: (_palette2 = (theme.vars || theme).palette) == null ? void 0 : (_palette2$action = _palette2.action) == null ? void 0 : _palette2$action.active,\n      disabled: (_palette3 = (theme.vars || theme).palette) == null ? void 0 : (_palette3$action = _palette3.action) == null ? void 0 : _palette3$action.disabled,\n      inherit: undefined\n    }[ownerState.color]\n  };\n});\nconst SvgIcon = /*#__PURE__*/React.forwardRef(function SvgIcon(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSvgIcon'\n  });\n  const {\n      children,\n      className,\n      color = 'inherit',\n      component = 'svg',\n      fontSize = 'medium',\n      htmlColor,\n      inheritViewBox = false,\n      titleAccess,\n      viewBox = '0 0 24 24'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const hasSvgAsChild = /*#__PURE__*/React.isValidElement(children) && children.type === 'svg';\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    fontSize,\n    instanceFontSize: inProps.fontSize,\n    inheritViewBox,\n    viewBox,\n    hasSvgAsChild\n  });\n  const more = {};\n  if (!inheritViewBox) {\n    more.viewBox = viewBox;\n  }\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(SvgIconRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    focusable: \"false\",\n    color: htmlColor,\n    \"aria-hidden\": titleAccess ? undefined : true,\n    role: titleAccess ? 'img' : undefined,\n    ref: ref\n  }, more, other, hasSvgAsChild && children.props, {\n    ownerState: ownerState,\n    children: [hasSvgAsChild ? children.props.children : children, titleAccess ? /*#__PURE__*/_jsx(\"title\", {\n      children: titleAccess\n    }) : null]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? SvgIcon.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Node passed into the SVG element.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * You can use the `htmlColor` prop to apply a color attribute to the SVG element.\n   * @default 'inherit'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'action', 'disabled', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.\n   * @default 'medium'\n   */\n  fontSize: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'large', 'medium', 'small']), PropTypes.string]),\n  /**\n   * Applies a color attribute to the SVG element.\n   */\n  htmlColor: PropTypes.string,\n  /**\n   * If `true`, the root node will inherit the custom `component`'s viewBox and the `viewBox`\n   * prop will be ignored.\n   * Useful when you want to reference a custom `component` and have `SvgIcon` pass that\n   * `component`'s viewBox to the root node.\n   * @default false\n   */\n  inheritViewBox: PropTypes.bool,\n  /**\n   * The shape-rendering attribute. The behavior of the different options is described on the\n   * [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering).\n   * If you are having issues with blurry icons you should investigate this prop.\n   */\n  shapeRendering: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Provides a human-readable title for the element that contains it.\n   * https://www.w3.org/TR/SVG-access/#Equivalent\n   */\n  titleAccess: PropTypes.string,\n  /**\n   * Allows you to redefine what the coordinates without units mean inside an SVG element.\n   * For example, if the SVG element is 500 (width) by 200 (height),\n   * and you pass viewBox=\"0 0 50 20\",\n   * this means that the coordinates inside the SVG will go from the top left corner (0,0)\n   * to bottom right (50,20) and each unit will be worth 10px.\n   * @default '0 0 24 24'\n   */\n  viewBox: PropTypes.string\n} : void 0;\nSvgIcon.muiName = 'SvgIcon';\nexport default SvgIcon;"]},"metadata":{},"sourceType":"module"}